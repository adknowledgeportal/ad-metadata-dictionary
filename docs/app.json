[{"name": "app.py", "content": "import pandas as pd\nfrom shiny import App, Inputs, Outputs, Session, reactive, render, req, ui\n\n# get live AD.model.csv from adkp/data-models repo\nurl = \"https://raw.githubusercontent.com/adknowledgeportal/data-models/main/AD.model.csv\"\nmodel_df = pd.read_csv(url)\n\n# remove template rows\nmodel_df = model_df.loc[model_df[\"Parent\"] != \"DataType\"]\n\n# pull out \"key\" attributes\nkeys_df = model_df.loc[model_df[\"Parent\"] == \"DataProperty\"]\n\n#rename key columns\nkeys_df = keys_df.rename(columns = {\"Attribute\" : \"Key\",\n                          \"Description\" : \"Key Description\",\n                          \"columnType\" : \"Key Type\"})\nkeys_df = keys_df[[\"Key\", \"Key Description\", \"Key Type\"]]\n\n# pull out \"value\" attributes\nvalues_df = model_df.loc[model_df[\"Parent\"].isin(keys_df[\"Key\"])]\n\n# rename columns\nvalues_df = values_df.rename(columns = {\"Attribute\" : \"Value\",\n                          \"Description\" : \"Value Description\"})\nvalues_df = values_df[[\"Value\", \"Value Description\", \"Source\", \"Parent\"]]\n\n# join keys and values\nmerged_df = values_df.merge(\n    keys_df,\n    how = \"left\", \n    left_on = \"Parent\", \n    right_on = \"Key\")\n\nmerged_df = merged_df[[\"Key\", \n                      \"Key Type\",\n                      \"Key Description\",\n                      \"Value\",\n                      \"Value Description\",\n                      \"Source\"]]\n\n# sort alphabetically\nsorted_df = merged_df.sort_values(by = [\"Key\", \"Value\"], \n                                  kind = \"mergesort\",\n                                  ascending = True,\n                                  key = lambda col: col.str.lower())\n\n# make clickable urls in source column\n\n# wrap urls in source column (27 is length of purl obo)\n#sorted_df[\"Source\"] = sorted_df[\"Source\"].str.wrap(width = 27, break_long_words=True, drop_whitespace=False)\n\n# app ui\napp_ui = ui.page_fluid(\n    ui.h1(\"Search the AD Knowledge Portal Data Model Dictionary\"),\n    ui.row(\n        ui.column(11, ui.output_data_frame(\"grid\"))\n    ),\n    class_=\"p-4\"\n)\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    @output\n    @render.data_frame\n    def grid():\n       return render.DataGrid(\n            sorted_df,\n            height=600,\n            width=\"fit-to-content\",\n            filters=True,\n            summary=True\n        )\n\n\napp = App(app_ui, server)\n", "type": "text"}, {"name": "LICENSE", "content": "MIT License\n\nCopyright (c) 2023 adknowledgeportal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "text"}, {"name": "README.md", "content": "# ad-metadata-dictionary", "type": "text"}]